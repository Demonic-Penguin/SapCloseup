' SAP GUI Scripting Auto-generated by SAP Close-Up Automation Tool
' -----------------------------------------------------------------------
' This script is intended to be run on a Windows machine with SAP GUI installed.
' It automates SAP interactions for the close-up process.
' -----------------------------------------------------------------------

' Error handling
On Error Resume Next
Dim errScript
Set errScript = CreateObject("Scripting.Dictionary")

' Initialize SAP connection
Function ConnectToSAP()
    Dim SapGuiAuto, Application, Connection, Session
    
    ' Get SAP GUI Scripting object
    Set SapGuiAuto = GetObject("SAPGUI")
    Set Application = SapGuiAuto.GetScriptingEngine
    
    ' Check if SAP GUI is running
    If IsObject(Application) Then
        ' Use existing connection if available
        If Application.Connections.Count > 0 Then
            Set Connection = Application.Connections(0)
            Set Session = Connection.Children(0)
            ConnectToSAP = True
            Set GetSapSession = Session
        Else
            MsgBox "No active SAP connections found. Please log in to SAP first.", 16, "Error"
            ConnectToSAP = False
        End If
    Else
        MsgBox "SAP GUI Automation is not available. Please make sure SAP GUI is running and scripting is enabled.", 16, "Error"
        ConnectToSAP = False
    End If
End Function

' Get SAP session
Function GetSapSession()
    Dim SapGuiAuto, Application, Connection
    
    ' Get SAP GUI Scripting object
    Set SapGuiAuto = GetObject("SAPGUI")
    Set Application = SapGuiAuto.GetScriptingEngine
    
    ' Use existing connection
    Set Connection = Application.Connections(0)
    Set GetSapSession = Connection.Children(0)
End Function

' Check if error occurred
Function CheckError()
    If Err.Number <> 0 Then
        errScript.Add Err.Number, Err.Description
        CheckError = False
    Else
        CheckError = True
    End If
    Err.Clear
End Function

' Display errors if any
Sub ShowErrors()
    If errScript.Count > 0 Then
        Dim errorMsg
        errorMsg = "The following errors occurred:" & vbCrLf
        
        For Each errNum In errScript.Keys
            errorMsg = errorMsg & "Error " & errNum & ": " & errScript(errNum) & vbCrLf
        Next
        
        MsgBox errorMsg, 16, "Script Errors"
    End If
End Sub

' Service Order Number
Dim ServiceOrderNumber
ServiceOrderNumber = "5019579117"


' Main script execution
If ConnectToSAP() Then
    Dim Session
    Set Session = GetSapSession()
    
    ' Navigate to service order display transaction
    Session.StartTransaction "IW33"
    CheckError()
    
    ' Enter service order number and execute
    Session.FindById("wnd[0]/usr/ctxtCAUFVD-AUFNR").Text = ServiceOrderNumber
    Session.FindById("wnd[0]/usr/ctxtCAUFVD-AUFNR").CaretPosition = 12
    Session.FindById("wnd[0]").SendVKey 0 ' ENTER
    CheckError()
    
    ' Get order details
    Dim OrderDetails
    OrderDetails = "Order: " & ServiceOrderNumber & vbCrLf
    OrderDetails = OrderDetails & "Customer: " & Session.FindById("wnd[0]/usr/subADDRESS:SAPLSZA1:0300/subCOUNTRY_SCREEN:SAPLSZA1:0301/txtADDR1_DATA-NAME1").Text & vbCrLf
    OrderDetails = OrderDetails & "Part Number: " & Session.FindById("wnd[0]/usr/tabsTABSTRIP_DETAIL/tabpINCL_DETAIL_TAB1/ssubDETAIL_1:SAPLITO0:0111/ctxtRIWO00-MATNR").Text & vbCrLf
    OrderDetails = OrderDetails & "Serial Number: " & Session.FindById("wnd[0]/usr/tabsTABSTRIP_DETAIL/tabpINCL_DETAIL_TAB1/ssubDETAIL_1:SAPLITO0:0111/ctxtRIWO00-SERIALNR").Text & vbCrLf
    
    ' Display order details
    MsgBox OrderDetails, 64, "Service Order Details"
End If

ShowErrors()
